"""
    鸭子类型与python中重载
"""

"""
    我们并不关心对象是什么类型，到底是不是鸭子，只关心行为。
    比如在python中，有很多file-like的东西，比如StringIO,GzipFile,socket。
        它们有很多相同的方法，我们把它们当作文件使用。
    又比如list.extend()方法中,我们并不关心它的参数是不是list,只要它是可迭代的,
        所以它的参数可以是list/tuple/dict/字符串/生成器等.
"""

"""
    函数重载解决问题：1.可变参数类型 2.可变参数个数
    一个基本的设计原则是，仅仅当两个函数除了参数类型和参数个数不同以外，其功能是完全相同的，
        此时才使用函数重载，如果两个函数的功能其实不同，那么不应当使用重载，
        而应当使用一个名字不同的函数。
    
    对于情况 1 ，函数功能相同，但是参数类型不同
        python 如何处理？答案是根本不需要处理，因为 python 可以接受任何类型的参数，
            如果函数的功能相同，那么不同的参数类型在 python 中很可能是相同的代码，
            没有必要做成两个不同函数。
    对于情况 2 ，函数功能相同，但参数个数不同
        python 如何处理？大家知道，答案就是缺省参数。对那些缺少的参数设定为缺省参数即可解决问题。
        因为你假设函数功能相同，那么那些缺少的参数终归是需要用的。
"""


def test1(a, b=1):  # b=1 是一个缺省参数
    result = a + b
    print("result={}".format(a + b))


test1(11)
test1(11, b=22)  # 此处b=22 是一个命名参数
